(ns eidens.markov.walk)

(defn proxy-with-prev-result
  "Returns an arg-less function that calls the given function with the
  result of its previous invocation (or the given initial value, if
  it's the first invocation)."
  [func initial]
  (let [prev (ref initial)]
    (fn []
      ; alter invokes func with the actual (deref-ed) value of prev
      ; then sets prev to the return value of that invocation
      ; finally returns the new actual value of prev
      (dosync (alter prev func))))
  )

(defn generate
  "Returns a lazy sequence of data generated by repeated invocations
  of the given function.

  The given function must accept the result of its previous invocation
  as an argument.

  On its first invocation the given initial value is passed in
  instead."
  [func-next-step initial]
  (repeatedly (proxy-with-prev-result func-next-step initial)))
